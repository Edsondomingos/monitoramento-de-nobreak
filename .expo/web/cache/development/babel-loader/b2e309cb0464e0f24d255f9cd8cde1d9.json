{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport { Container, Titulo, TextoComum, Botao, Circulo, LigaDesliga, TextoBtn } from \"../../assets/styledComponents/Components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Paho from \"paho-mqtt\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar topico;\nvar mensagem;\nvar redeValue;\nvar client = new Paho.Client('broker.emqx.io', 8083, '/');\nclient.connect({\n  onSuccess: function onSuccess() {\n    console.log(\"conectado\");\n    client.subscribe(\"nobreak\");\n    var message1 = new Paho.Message(\"12.5\");\n    message1.destinationName = \"nobreak\";\n    client.send(message1);\n    client.subscribe(\"rede\");\n    var message2 = new Paho.Message(\"0\");\n    message2.destinationName = \"rede\";\n    client.send(message2);\n    client.subscribe(\"liga\");\n    var message3 = new Paho.Message(\"on\");\n    message3.destinationName = \"liga\";\n    client.send(message3);\n  },\n  onFailure: function onFailure() {\n    console.log(\"Falhou\");\n  }\n});\nexport function onoff() {\n  client.subscribe(\"liga\");\n  var rele = new Paho.Message(\"on\");\n  rele.destinationName = \"liga\";\n  client.send(rele);\n}\n\nvar porcentagem = function porcentagem(msg) {\n  var valor = parseFloat(msg);\n\n  if (valor >= 11.7 && valor <= 12.7) {\n    var resultado = parseInt((1 - (12.7 - valor)) * 100);\n    return resultado + '%';\n  } else if (valor < 11.7) {\n    return 'Descarregada';\n  }\n};\n\nexport function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rede = _useState4[0],\n      setRede = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      liga = _useState6[0],\n      setLiga = _useState6[1];\n\n  client.onMessageArrived = function (message) {\n    console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n\n    if (message.destinationName == 'nobreak') {\n      setMsg(message.payloadString);\n    }\n\n    if (message.destinationName == 'rede') {\n      setRede(message.payloadString);\n    }\n\n    if (message.destinationName == 'liga') {\n      if (message.payloadString == 'on') {\n        setLiga(true);\n      } else {\n        setLiga(false);\n      }\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Circulo, {\n      children: [_jsx(TextoComum, {\n        children: \"Uso de Energia\"\n      }), _jsx(TextoComum, {\n        children: rede == '1' ? 'Conectado a Tomada' : 'Fora da tomada'\n      })]\n    }), _jsxs(Circulo, {\n      children: [_jsx(TextoComum, {\n        children: \"Bateria\"\n      }), _jsxs(TextoComum, {\n        children: [msg, \"v\"]\n      }), _jsx(TextoComum, {\n        children: porcentagem(msg)\n      })]\n    }), _jsx(Circulo, {\n      children: _jsx(LigaDesliga, {\n        testID: \"btnLigar\",\n        style: liga ? {\n          backgroundColor: '#7f7'\n        } : {\n          backgroundColor: '#f33'\n        },\n        onPress: onoff,\n        children: _jsx(TextoComum, {\n          children: liga ? 'LIGADO' : 'DESLIGADO'\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Container","Titulo","TextoComum","Botao","Circulo","LigaDesliga","TextoBtn","Paho","topico","mensagem","redeValue","client","Client","connect","onSuccess","console","log","subscribe","message1","Message","destinationName","send","message2","message3","onFailure","onoff","rele","porcentagem","msg","valor","parseFloat","resultado","parseInt","App","setMsg","rede","setRede","liga","setLiga","onMessageArrived","message","payloadString","backgroundColor"],"sources":["C:/testes/monitoramento-de-nobreak/src/components/TesteMQTT.js"],"sourcesContent":["import * as React from 'react'\nimport { useState } from \"react\"\nimport { Container, Titulo, TextoComum, Botao, Circulo, LigaDesliga, TextoBtn } from '../../assets/styledComponents/Components'\nimport { View, Text} from \"react-native\"\nimport Paho from \"paho-mqtt\"\n\nvar topico;\nvar mensagem;\nvar redeValue\n\n// const ssid = \"wIFRN-IoT\";\n// const  password = \"deviceiotifrn\";\n// const mqtt_broker = \"10.44.1.35\";\n\n// const mqtt_username = \"emqx\";\n// const mqtt_password = \"public\";\n// const mqtt_port = 1883;\n\nconst client = new Paho.Client(\n    'broker.emqx.io',\n    8083,\n    '/'\n)\n\n// const client = new Paho.Client(\n//     '10.44.1.35',\n//     9001,\n//     '/'\n// )\n\nclient.connect({\n    onSuccess: function () {\n        console.log(\"conectado\")\n        client.subscribe(\"nobreak\")\n        // client.subscribe(\"rede\")\n        const message1 = new Paho.Message(\"12.5\")\n        message1.destinationName = \"nobreak\"\n        client.send(message1)\n\n        client.subscribe(\"rede\")\n        const message2 = new Paho.Message(\"0\")\n        message2.destinationName = \"rede\"\n        client.send(message2)\n\n        client.subscribe(\"liga\")\n        const message3 = new Paho.Message(\"on\")\n        message3.destinationName = \"liga\"\n        client.send(message3)\n    },\n    onFailure: function () {\n        console.log(\"Falhou\")\n    },\n})\n\n// const clientRede = new Paho.Client(\n//     'broker.emqx.io',\n//     8083,\n//     '/'\n// )\n\n// clientRede.connect({\n//     onSuccess: function () {\n//         console.log(\"Rede Conectada\")\n//         clientRede.subscribe(\"rede\")\n//         const message2 = new Paho.Message(\"0\")\n//         message2.destinationName = \"rede\"\n//         clientRede.send(message2)\n        \n//     },\n//     onFailure: function () {\n//         console.log(\"Falhou\")\n//     },\n// })\n\n// const clientLiga = new Paho.Client(\n//     'broker.emqx.io',\n//     8083,\n//     '/'\n// )\n\n// clientLiga.connect({\n//     onSuccess: function () {\n//         console.log(\"Liga Conectada\")\n//         clientLiga.subscribe(\"liga\")\n//         const message3 = new Paho.Message(\"on\")\n//         message3.destinationName = \"liga\"\n//         clientRede.send(message3)\n//     },\n//     onFailure: function () {\n//         console.log(\"Falhou\")\n//     },\n// })\n\n    \n\nexport function onoff(){\n    client.subscribe(\"liga\")\n    const rele = new Paho.Message(\"on\")\n    rele.destinationName = \"liga\"\n    client.send(rele)\n\n}\n\nconst porcentagem = (msg) => {    \n    let valor = parseFloat(msg)\n    if(valor >= 11.7 && valor <= 12.7){\n        let resultado = parseInt((1 - (12.7 - valor)) * 100)\n        return resultado + '%'\n    } else if (valor < 11.7){\n        return 'Descarregada'\n    }\n}\n\n// console.log(client.onMessageArrived =  (message) => message)\nexport function App() {\n    \n    const [msg, setMsg] = useState('')\n    const [rede, setRede] = useState('')\n    const [liga, setLiga] = useState('')\n\n    client.onMessageArrived = function (message) {\n        console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString)\n         \n        if (message.destinationName == 'nobreak'){\n            setMsg(message.payloadString)\n        }\n        if (message.destinationName == 'rede'){\n            setRede(message.payloadString)\n        }\n        if (message.destinationName == 'liga'){\n            if (message.payloadString == 'on'){\n                setLiga(true)\n            } else {\n                setLiga(false)\n            }\n        }\n        \n    }     \n    // return msg + rede\n    // return (\n    //     <View>\n    //         <Text>{msg}v</Text>\n    //         <Text>{porcentagem(msg)}</Text>\n    //         <Text>{rede}</Text>\n    //     </View>\n        \n    // )\n    return (\n        <>\n            <Circulo>\n                <TextoComum>Uso de Energia</TextoComum>        \n                <TextoComum>{rede == '1' ? 'Conectado a Tomada':'Fora da tomada'}</TextoComum>\n            </Circulo>\n            \n            \n            <Circulo> \n                <TextoComum>Bateria</TextoComum>     \n                <TextoComum>{msg}v</TextoComum>\n                <TextoComum>{porcentagem(msg)}</TextoComum>\n            </Circulo>\n\n            <Circulo>\n                <LigaDesliga \n                    testID='btnLigar'\n                    style={liga ? {backgroundColor: '#7f7'} : {backgroundColor: '#f33'}}\n                    onPress={onoff}\n                >\n                <TextoComum>{liga ? 'LIGADO' : 'DESLIGADO'}</TextoComum>\n                {/*<TextoComum>BTN</TextoComum>*/}\n                </LigaDesliga>\n            </Circulo>\n        </>\n    )\n}\n\n// export function Red(){\n\n//     const [rede, setRede] = useState('')\n//     console.log('fim app',App(),'<-')\n//     redeValue = App().substring(4)\n//     return (\n//         <View>\n//             <Text>\n//                 {rede == '1' ? 'Conectado a Tomada':'Fora da tomada'}                \n//                 {typeof rede}\n//                 {redeValue}\n//             </Text>\n//         </View>\n//     )\n// }\n \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}