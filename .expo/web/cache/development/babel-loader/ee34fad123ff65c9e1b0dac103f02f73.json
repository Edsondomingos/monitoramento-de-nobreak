{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Paho from \"paho-mqtt\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar topico;\nvar mensagem;\nvar redeValue;\nvar client = new Paho.Client('broker.emqx.io', 8083, '/');\nclient.connect({\n  onSuccess: function onSuccess() {\n    console.log(\"connected\");\n    client.subscribe(\"nobreak\");\n    var message1 = new Paho.Message(\"12.3\");\n    message1.destinationName = \"nobreak\";\n    client.send(message1);\n  },\n  onFailure: function onFailure() {\n    console.log(\"Falhou\");\n  }\n});\nvar clientRede = new Paho.Client('broker.emqx.io', 8083, '/');\nclientRede.connect({\n  onSuccess: function onSuccess() {\n    console.log(\"connected\");\n    clientRede.subscribe(\"rede\");\n    var message2 = new Paho.Message(\"1\");\n    message2.destinationName = \"rede\";\n    clientRede.send(message2);\n  },\n  onFailure: function onFailure() {\n    console.log(\"Falhou\");\n  }\n});\nexport function onoff() {\n  client.subscribe(\"liga\");\n  var rele = new Paho.Message(\"on\");\n  rele.destinationName = \"liga\";\n  client.send(rele);\n}\n\nvar porcentagem = function porcentagem(msg) {\n  var valor = parseFloat(msg);\n\n  if (valor >= 11.7 && valor <= 12.7) {\n    var resultado = parseInt((1 - (12.7 - valor)) * 100);\n    return resultado + '%';\n  } else if (valor < 11.7) {\n    return 'Descarregada';\n  }\n};\n\nexport function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setmsg = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rede = _useState4[0],\n      setRede = _useState4[1];\n\n  client.onMessageArrived = function (message) {\n    console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n    topico = message.topic;\n\n    if (topico == 'nobreak') {\n      mensagem = message.payloadString;\n      setmsg(mensagem);\n    }\n  };\n\n  clientRede.onMessageArrived = function (message) {\n    console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n    topico = message.topic;\n\n    if (topico == 'rede') {\n      redeValue = message.payloadString;\n      setRede(redeValue);\n      console.log(typeof redeValue);\n    }\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [mensagem, \"v\"]\n    }), _jsx(Text, {\n      children: porcentagem(mensagem)\n    }), _jsx(Text, {\n      children: redeValue\n    }), _jsx(Text, {\n      children: console.log('Dentro de App: ', mensagem, redeValue)\n    })]\n  });\n}\nexport function Red() {\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rede = _useState6[0],\n      setRede = _useState6[1];\n\n  clientRede.onMessageArrived = function (message) {\n    console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n    topico = message.destinationName;\n    console.log('REDE ');\n\n    if (topico == 'rede') {\n      redeValue = message.payloadString;\n      setRede(redeValue);\n    }\n  };\n\n  return _jsx(View, {\n    children: _jsxs(Text, {\n      children: [parseInt(rede) == 0 ? 'Conectado a Tomada' : 'Fora da tomada', typeof rede]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","Paho","topico","mensagem","redeValue","client","Client","connect","onSuccess","console","log","subscribe","message1","Message","destinationName","send","onFailure","clientRede","message2","onoff","rele","porcentagem","msg","valor","parseFloat","resultado","parseInt","App","setmsg","rede","setRede","onMessageArrived","message","payloadString","topic","Red"],"sources":["C:/testes/monitoramento-de-nobreak/src/components/TesteMQTT.js"],"sourcesContent":["import * as React from 'react'\nimport { useState } from \"react\"\nimport { View, Text} from \"react-native\"\nimport Paho from \"paho-mqtt\"\n\nvar topico;\nvar mensagem;\nvar redeValue\n\n// const ssid = \"wIFRN-IoT\";\n// const  password = \"deviceiotifrn\";\n// const mqtt_broker = \"10.44.1.35\";\n\n// const mqtt_username = \"emqx\";\n// const mqtt_password = \"public\";\n// const mqtt_port = 1883;\n\nconst client = new Paho.Client(\n    'broker.emqx.io',\n    8083,\n    '/'\n    )\n\n// const client = new Paho.Client(\n//     '10.44.1.35',\n//     9001,\n//     '/'\n// )\n\nclient.connect({\n    onSuccess: function () {\n        console.log(\"connected\")\n        client.subscribe(\"nobreak\")\n        // client.subscribe(\"rede\")\n        const message1 = new Paho.Message(\"12.3\")\n        message1.destinationName = \"nobreak\"\n        client.send(message1)\n        // const message2 = new Paho.Message(\"1\")\n        // message2.destinationName = \"rede\"\n        // client.send(message2)\n        // mensagem = message1\n        // redeValue = message2\n    },\n    onFailure: function () {\n        console.log(\"Falhou\")\n    },\n})\n\n// TESTAR CRIAR CLIENT2 para RECEBE TOPICO DIFERENTE\nconst clientRede = new Paho.Client(\n    'broker.emqx.io',\n    8083,\n    '/'\n)\n\nclientRede.connect({\n    onSuccess: function () {\n        console.log(\"connected\")\n        clientRede.subscribe(\"rede\")\n        const message2 = new Paho.Message(\"1\")\n        message2.destinationName = \"rede\"\n        clientRede.send(message2)\n    },\n    onFailure: function () {\n        console.log(\"Falhou\")\n    },\n})\n\n    \n\nexport function onoff(){\n    client.subscribe(\"liga\")\n    const rele = new Paho.Message(\"on\")\n    rele.destinationName = \"liga\"\n    client.send(rele)\n\n}\n\n// export function recebe() {\n    // console.log(client.onMessageArrived.message.payloadString)\n// export const recebe = client.onMessageArrived = function (message) {\n//     topico = message.topic;\n//     console.log('onMessageArrived')\n//     if (topico == 'nobreak'){\n//         mensagem = message.payloadString;\n//     }\n//     if (topico == 'rede'){\n//         redeValue = message.payloadString;\n//     }\n//     console.log(mensagem, redeValue)\n// }\n// }\n// client.onMessageArrived = (message) => message.topic == 'liga' ? console.log(message.payloadString) : console.log('Erro')\n\n// function pegaDados(){\n//     client.onMessageArrived = function (message) {\n//         console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n//         // topico = message.destinationName;\n//         topico = message.topic;\n//         console.log(message)\n//         if (topico == 'nobreak'){\n//             mensagem = message.payloadString;\n//             // setmsg(mensagem)\n//         }\n//         if (topico == 'rede'){\n//             redeValue = message.payloadString;\n//             // setRede(redeValue)\n//         }\n//         return message.payloadString\n//     } \n// }\n\nconst porcentagem = (msg) => {    \n    let valor = parseFloat(msg)\n    if(valor >= 11.7 && valor <= 12.7){\n        let resultado = parseInt((1 - (12.7 - valor)) * 100)\n        return resultado + '%'\n    } else if (valor < 11.7){\n        return 'Descarregada'\n    }\n}\n\nexport function App() {\n\n    const [msg, setmsg] = useState('')\n    const [rede, setRede] = useState()\n\n    client.onMessageArrived = function (message) {\n        console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n        // topico = message.destinationName;\n        topico = message.topic;\n        // console.log(message)\n        // console.log('Topico->', topico)\n        // console.log('APP ^')\n        if (topico == 'nobreak'){\n            mensagem = message.payloadString;\n            setmsg(mensagem)\n        } \n        // if (topico == 'rede'){\n        //     redeValue = message.payloadString;\n        //     setRede(redeValue)\n        //     Red(redeValue)\n        //     console.log(typeof redeValue)\n        // }\n    }    \n    \n    clientRede.onMessageArrived = function (message) {\n        console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n        // topico = message.destinationName;\n        topico = message.topic;\n        if (topico == 'rede'){\n            redeValue = message.payloadString;\n            setRede(redeValue)\n            // Red(redeValue)\n            console.log(typeof redeValue)\n        }\n    }  \n    \n    return (\n        <View>\n            <Text>{mensagem}v</Text>\n            <Text>{porcentagem(mensagem)}</Text>\n            <Text>{redeValue}</Text>\n            <Text>{console.log('Dentro de App: ',mensagem, redeValue)}</Text>\n        </View>\n        \n    )\n}\n\nexport function Red(){\n    // console.log('topo de REDE')\n\n    const [rede, setRede] = useState()\n\n    clientRede.onMessageArrived = function (message) {\n        console.log('Topic: ' + message.destinationName + \", Message: \" + message.payloadString);\n        topico = message.destinationName;\n        console.log('REDE ')\n        if (topico == 'rede'){\n            redeValue = message.payloadString;\n            setRede(redeValue)\n        }\n    }  \n    \n    return (\n        <View>\n            <Text>\n                {parseInt(rede) == 0 ? 'Conectado a Tomada':'Fora da tomada'}\n                {typeof rede}\n                \n            </Text>\n        </View>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}